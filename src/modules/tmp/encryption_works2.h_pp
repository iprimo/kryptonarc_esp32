#include "HardwareSerial.h"
#include "BLEDevice.h"
#include "BLEServer.h"
#include "BLEUtils.h"

#include "iostream"    // std::cout
#include "algorithm"    // std::min
#include "stdio.h"
#include "stdlib.h"
#include "string.h"

#include "ESP32Servo.h"
#include "modules/servo.hpp"

#include "modules/string_works.hpp"
#include "modules/hardware_info_works.hpp"
#include "modules/system_structs.hpp"
#include "modules/e2prom_works.hpp"
#include "modules/bluetooth_works.hpp"
#include "modules/encryption_works.hpp"
#include "modules/base64_char_masking.hpp"

#include "base64.h"
#include "mbedtls/base64.h"

#include "Crypto.h"
#include "AES.h"
#include "string.h"
#include "mbedtls/aes.h"
//key[16] cotain 16 byte key(128 bit) for encryption
// byte key[16]={0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};



//plaintext[16] contain the text we need to encrypt
byte plaintext[16]={0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55};
                    
//cypher[16] stores the encrypted text
byte cypher[16];
//decryptedtext[16] stores decrypted text after decryption
byte decryptedtext[16];
//creating an object of AES128 class
AES128 aes128;


void setup() {
  Serial.begin(9600);
  
  char key_string[17] = "1234123412341234";
  byte key[16];
  memcpy(key, key_string, sizeof(key_string)) ;
  
  aes128.setKey(key,16);// Setting Key for AES
  
  

  Serial.print("Before Encryption:");
  for(int i=0; i<sizeof(plaintext); i++){
    Serial.write(plaintext[i]);
   }
   
  aes128.encryptBlock(cypher,plaintext);//cypher->output block and plaintext->input block
  Serial.println();
  Serial.print("After Encryption:");

  int resultIndex = 0;
  char dataHash[sizeof(cypher) * 2 + 1];  // Allocate space for digits and null terminator

  for(int j=0;j<sizeof(cypher);j++){
      Serial.write(cypher[j]);

      char str[3];
      sprintf(str, "%02x", cypher[j]);

      // Append str to the dataHash
      strncpy(dataHash + resultIndex, str, 2);  // Copy 2 characters from str
      resultIndex += 2;  // Move the index for the next append
    }
      // Add null terminator to mark the end of the string
  dataHash[resultIndex] = '\0';
Serial.println("dataHash  >>> ");
Serial.println(dataHash);
Serial.println("dataHash  >>> ");

   aes128.decryptBlock(decryptedtext,cypher);
   
  Serial.println();
  Serial.print("After Dencryption:");
  for(int i=0; i<sizeof(decryptedtext); i++){
    Serial.write(decryptedtext[i]);
   }

}

void loop() {
  // put your main code here, to run repeatedly:

}
